apiVersion: apps/v1
kind: Deployment
metadata:
  name: ibppeer-deployment
spec:
  replicas: 1
  selector: {}
  strategy:
    type: Recreate
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: orgname
                      operator: In
                      values:
                        - ""
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: LICENSE
              value: accept
            - name: CORE_PEER_LISTENADDRESS
              value: 0.0.0.0:7051
            - name: CORE_PEER_CHAINCODELISTENADDRESS
              value: 0.0.0.0:7052
            - name: CORE_PEER_MSPCONFIGPATH
              value: /certs/msp
            - name: CORE_PEER_FILESYSTEMPATH
              value: /data/peer/
            - name: CORE_PEER_TLS_ENABLED
              value: "true"
            - name: CORE_PEER_TLS_CERT_FILE
              value: /certs/tls/signcerts/cert.pem
            - name: CORE_PEER_TLS_KEY_FILE
              value: /certs/tls/keystore/key.pem
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: /certs/msp/tlscacerts/cacert-0.pem
            - name: FABRIC_CFG_PATH
              value: /certs
            - name: CORE_OPERATIONS_LISTENADDRESS
              value: 0.0.0.0:9443
            - name: CORE_OPERATIONS_TLS_ENABLED
              value: "true"
            - name: CORE_OPERATIONS_TLS_CERT_FILE
              value: /certs/tls/signcerts/cert.pem
            - name: CORE_OPERATIONS_TLS_KEY_FILE
              value: /certs/tls/keystore/key.pem
            - name: CORE_OPERATIONS_TLS_CLIENTAUTHREQUIRED
              value: "false"
            - name: CORE_OPERATIONS_TLS_CLIENTROOTCAS_FILES
              value: /certs/msp/tlscacerts/cacert-0.pem
          image: ""
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: operations
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 5
          name: peer
          ports:
            - containerPort: 7051
              name: peer
            - containerPort: 7052
              name: chaincodelisten
            - containerPort: 9443
              name: operations
          readinessProbe:
            httpGet:
              path: /healthz
              port: operations
              scheme: HTTPS
            initialDelaySeconds: 26
            periodSeconds: 5
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 400M
            requests:
              cpu: 200m
              memory: 400M
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 7051
            runAsNonRoot: true
            runAsUser: 7051
          volumeMounts:
            - mountPath: /data
              name: fabric-peer-0
              subPath: data
            - mountPath: /certs/msp/cacerts
              name: ecert-cacerts
            - mountPath: /certs/msp/signcerts
              name: ecert-signcert
            - mountPath: /certs/msp/tlscacerts
              name: tls-cacerts
            - mountPath: /certs/tls/keystore
              name: tls-keystore
            - mountPath: /certs/tls/signcerts
              name: tls-signcert
            - mountPath: /certs
              name: peer-config
            - mountPath: /certs/msp
              name: peer-config
        - env:
            - name: LICENSE
              value: accept
            - name: BACKEND_ADDRESS
              value: 127.0.0.1:7051
            - name: SERVER_TLS_CERT_FILE
              value: /certs/tls/signcerts/cert.pem
            - name: SERVER_TLS_KEY_FILE
              value: /certs/tls/keystore/key.pem
            - name: SERVER_TLS_CLIENT_CA_FILES
              value: /certs/msp/tlscacerts/cacert-0.pem
            - name: SERVER_BIND_ADDRESS
              value: 0.0.0.0
            - name: SERVER_HTTP_DEBUG_PORT
              value: "8080"
            - name: SERVER_HTTP_TLS_PORT
              value: "7443"
            - name: BACKEND_TLS
              value: "true"
            - name: SERVER_HTTP_MAX_WRITE_TIMEOUT
              value: 5m
            - name: SERVER_HTTP_MAX_READ_TIMEOUT
              value: 5m
            - name: USE_WEBSOCKETS
              value: "true"
          image: ""
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 6
            tcpSocket:
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 5
          name: proxy
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 7443
              name: https
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 26
            periodSeconds: 5
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 200M
            requests:
              cpu: 100m
              memory: 200M
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /certs/msp/tlscacerts
              name: tls-cacerts
            - mountPath: /certs/tls/signcerts
              name: tls-signcert
            - mountPath: /certs/tls/keystore
              name: tls-keystore
      hostIPC: false
      hostNetwork: false
      hostPID: false
      initContainers:
        - env:
            - name: LICENSE
              value: accept
          image: ""
          imagePullPolicy: Always
          name: init
          resources:
            limits:
              cpu: 200m
              memory: 400M
            requests:
              cpu: 200m
              memory: 400M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CHOWN
                - FOWNER
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
            - mountPath: /data
              name: fabric-peer-0
              subPath: data
      securityContext:
        fsGroup: 2000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000